pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
--enigma
--made with ♥
--by athur, lucas and remy

function _init()
	create_plr()
	create_mob1()
	init_msg()
	state=0
end


function _update60()
	if (state==0) update_game()
	if (state==1) then
	 update_over()
	end
end


function update_game()
	if not messages[1] then
		update_plr()
		update_mob1()
		update_explo()
	end
	update_cam()
	update_msg()
	update_blt()
end



function _draw()
	if (state==0) draw_game()
	if (state==1) draw_over()
end


function draw_game()
	cls()
	draw_map()
	draw_mob1()
	draw_explo()
	draw_blt()
	draw_fog(plr.x,plr.y,3)
	draw_plr()
	draw_ui()
	draw_msg()
end
-->8
--player

local collision_checked=false
local invul_counter = 0 
local invul_duration = 60
local invul=false

function create_plr()
	plr={
		x=3,y=3,
		ox=0,oy=0,
		start_ox=0,start_oy=0,
		anim_t=0,
		sprite=1,
		chest=0,
		key=0,
		life=3
	}
end


function draw_plr()
	spr(plr.sprite,
	plr.x*8,
	plr.y*8,1,1,plr.flip)
end


function update_plr()
	local newx=plr.x
	local newy=plr.y
	if plr.anim_t==0 then
		newox=0
		newoy=0
		if (btn(➡️)) then
		 newx+=1
		 newox=-8
		 plr.sprite=1
		 plr.flip=false
		elseif (btn(⬅️)) then
		 newx-=1
		 newox=8
		 plr.flip=true
		elseif (btn(⬇️)) then 
			newy+=1
			newoy=-8
		elseif (btn(⬆️)) then 
			newy-=1
			newoy=8
		elseif (btnp(❎)) then
			shoot()
			sfx(7)
		end
	end
	interact(newx,newy)

	if not check_flag(0,newx,newy)
	and (plr.x!=newx or plr.y!=newy) then
		plr.x=mid(0,newx,127)
		plr.y=mid(0,newy,63)
		plr.start_ox=newox
		plr.start_oy=newoy
		plr.anim_t=1
	end
	
	--animation
	plr.anim_t=max(plr.anim_t-0.125,0)
	plr.ox=plr.start_ox*plr.anim_t
	plr.oy=plr.start_oy*plr.anim_t
	
	if plr.anim_t >=0.5 then
		plr.sprite=2
	else
		plr.sprite=1
	end
	if not collision_checked
	 and not invul then
		for m1 in all(mob1) do
		 if plr.x==m1.x and plr.y==m1.y then
	     plr.life-=1
	     sfx(4)
	     collsion_checked=true
	     invul=true
	     invul_counter=invul_duration
	  end
	 end
	end
	if invul then
		invul_counter-=1
		if invul_counter <=0 then
			invul=false
		end
	end
	if plr.life == 0 then
	 sfx(5)
	 state=1
	end
	collision_checked=false
end


function interact(x,y)
	if check_flag(1,x,y) then
		pick_up_key(x,y)
	elseif check_flag(2,x,y) then
		pick_up_chest(x,y)
	elseif check_flag(3,x,y) then
		open_door(x,y)
	elseif check_flag(4,x,y) then
		open_tree(x,y)
	end
	if x==6 and y==2 then
		create_msg("ada", "bienvenue dans enigma !", 
				"il faut nous aider,\nretrouve ma soeur plus au sud", "elle t'en diras plus")
	elseif x==10 and y==5 then
		create_msg("panneau", "direction ⬇️ :\nla prairie paisible")
	elseif x==12 and y==8 then
		create_msg("panneau", "direction ⬆️ :\nla prairie fleurie")
	elseif x==9 and y==9 then
		create_msg("lovelace", "mon papi c'est fait enlever\npar des gobelins rouges", "ils l'ont amene\nsur la montagne infernale", "il te faudra traverser toute\nla region d'enigma", "mais avant il faut deja\nque tu quittes cette prairie", "la clef du donjon\nest a cote de la cascade", "tu pourras y trouver\nde quoi traverser la foret", "bonne chance et\nramene moi mon papi")
	elseif x==30 and y==11 then
		create_msg("panneau", "direction ➡️ :\nle labyrinthe fou")
	elseif x==3 and y==3 and not game_started then
		create_msg("tuto", "pour passer les messages\nappuyer sur 🅾️", "pour vous deplacer utiliser\nles fleches directionnelles", "pour tirer appuyer\nsur ❎")
		game_started = true
	end
end
-->8
--map

function draw_map()
	map(0,0,0,0,128,64)
end


function check_flag(flag,x,y)
	local sprite=mget(x,y)
	return fget(sprite,flag)
end


function update_cam()
				camspeed = 0.5 
    local zonex = flr(plr.x / 32) * 32
    local zoney = flr(plr.y / 32) * 32

    local camtargetx = plr.x * 8
    local camtargety = plr.y * 8

    -- interpolation pour un deplacement fluide
    camtargetx = lerp(camtargetx, camtargetx + plr.ox, camspeed)
    camtargety = lerp(camtargety, camtargety + plr.oy, camspeed)

    local camx = mid(zonex, (camtargetx - 64) / 8, zonex + 16)
    local camy = mid(zoney, (camtargety - 64) / 8, zoney + 16)

    camera(camx * 8, camy * 8)
end

function lerp(a, b, t)
    return a + (b - a) * t
end




function next_tile(x,y)
	sprite=mget(x,y)
	mset(x,y,sprite+1)
end


function pick_up_key(x,y)
	next_tile(x,y)
	plr.key+=1
	sfx(0)
end


function pick_up_chest(x,y)
	next_tile(x,y)
	plr.chest+=1
	create_msg("coffre", "vous avez ramasse\nune hache", "faites en bon usage\nelle va bientot se casser")
	sfx(1)
end


function open_door(x,y)
	if (plr.key > 0) then
		next_tile(x,y)
		sfx(2)
		plr.key-=1
	end	
end


function open_tree(x,y)
	if (plr.chest > 0) then
		next_tile(x,y)
		sfx(4)
		plr.chest-=1
		create_msg("tronc","votre hache c'est cassee")
	end	
end
-->8
--ui

function draw_ui()
	camera()
	palt(0,false)
	palt(12,true)
	spr(0,2,2)
	print_outline("X"..plr.key,10,2,7)
	spr(16,22,1)
	print_outline("X"..plr.chest,30,2,7)
	spr(32,2,8)
	print_outline("X"..plr.life,10,9,7)
	palt()
end

function print_outline(text,x,y)
	print(text,x-1,y,0)
	print(text,x+1,y,0)
	print(text,x,y-1,0)
	print(text,x,y+1,0)
	print(text,x,y,7)
end
-->8
--messages

function init_msg()
	messages={}
end

function create_msg(name,...)
	msg_title=name
	messages={...}
end


function update_msg()
	if (btnp(🅾️)) then
		deli(messages,1)
	end
end


function draw_msg()
	if messages[1] then
		local y = 100
		--title
		rectfill(7,y,11+#msg_title*4,y+7,2)
		print(msg_title,10,y+2,9)
		--message
		rectfill(3,y+8,124,y+24,4)
		rect(3,y+8,124,y+24,2)
		print(messages[1],6,y+11,15)	
	end
end
-->8
--bullets

local blt={}

function shoot()
	local new_blt={
	 x=plr.x,
	 y=plr.y,
	 direction=plr.flip and -1 or 1,
  sprite=48,
  speed=1,
  timer=60
 }
 add(blt, new_blt)
end


function update_blt()
	for b in all(blt) do
  b.x = b.x + b.direction * b.speed
  b.timer-=1
  if b.timer <= 0 then
  	del(blt, b)
  end
 end
end


function draw_blt()
	for b in all(blt) do
			spr(b.sprite,b.x*8,b.y*8)
	end
end

-->8
--game over

function update_over()
	if (btn(🅾️)) _init()
end

function draw_over()
 rect(20, 35, 115, 70, 1)
 rectfill(19, 34, 114, 69, 6)

 camera(0, 0)
 print("you die ☉", 45, 40, 8)
 print("nice try", 25, 50, 7)
 print("press 🅾️/c to continue", 25, 58, 7)
 camera()
end



-->8
--mobs

local mobcounter = 0

function add_mob1(m1x,m1y)
 m1={
  x=m1x,y=m1y,
  life=3,
  speed=30,
  sprite=43
 }
 add(mob1,m1)
end



function create_mob1()
	mob1={}
	add_mob1(16, 24)
end


function draw_mob1()
 for m1 in all(mob1) do
		spr(m1.sprite,
		m1.x*8,
		m1.y*8)
	end
end

function update_mob1()
	mobcounter += 1
	local lerp = 1/m1.speed
	if mobcounter >= m1.speed then
		mobcounter = 0
		for m1 in all(mob1) do
			local newx=m1.x
			local newy=m1.y
			local direction = flr(rnd(4))
			if direction == 0 then
				newy-=1
			elseif direction == 1 then
				newy+=1
			elseif direction == 2 then
				newx-=1
			elseif direction == 3 then
				newx+=1
			end
	
			m1.x = mid(0, m1.x, 127)
			m1.y = mid(0, m1.y, 127)
			if not check_flag(0,newx,newy) then
				m1.x=mid(0,newx,127)
				m1.y=mid(0,newy,63)
			end
			for b in all(blt) do
				if collision(m1,b) then
					del(blt,b)
					m1.life-=1
					create_explo(b.x+4,b.y+2)
					if m1.life == 0 then
						del(mob1,m1)
					end
				end
			end
		end
	end
end


-->8
--collision

function  collision(a, b)

	if a.x > b.x + 8 
	or a.y > b.y + 8
	or a.x + 8 < b.x
	or a.y + 8 < b.y then
		return true
	else
		return false
	end
end
-->8
--explosions

local explo={}

function create_explo(x, y)
	sfx(6)
	new_explo={
		x=x,
		y=y,
		timer=0
		}
	add(explo, new_explo)
end

function update_explo()

	for e in all(explo) do
		e.timer += 1
		if e.timer == 13 then
			del(explo, e)
			end
		end
end


function draw_explo()
	for e in all(explo) do
		circ(e.x, e.y, 
						e.timer/3, 8+e.timer%3)
	end
end



__gfx__
cccccccc8804444400044444333aa333333443333333333333333333333333333b3333333333333333333333333333333333333333bbbb3333bbbb3300000000
cc0ccccc008888400088884033aaaa33334444333bb33333333333333333333333b33333333333333333333333333333333313333b8bbbb33b8bbbb300000000
c0a0000c004471f0884471f0aaffffa344ffff4333bb33333333bb333333333333b333333333333333333333333333333331c1333b3bb8133b33b81300000000
0a0aaaa0004ffff0004ffff0aaf1f1a344f1f143333b33b3333bb333333333b3333333333333333333373333333a3333333313333b3833133b3bb31300000000
c0a000a00011666600116666aaffffa344ffff4333333b33333b333333333b33333333bb333333333378733333a9a3333333333331bb3b1331bb3b1300000000
cc0ccc0c0011516500115165335575333355753333333b33333333333bb33b3333333bb33339333333373333333a333333333333331111333311113300000000
cccccccc0091919000919190399999933cccccc3333333333333333333bb333333333b3333989333333333333333333333333333333223333332233300000000
cccccccc000d0010000100d033733733337337333333333333333333333b33333333333333393333333333333333333333333333334442333344423300000000
cccccccc14444441144200013333333333333333333333333333b33333333333333333333333333333333333333333333333333333bbbb3333bbbb3300000000
00000000440505044452000033333a333333333333333bb3333b33333333003333333333333333333333b33333333333333333333bbbaab33bb33bb300000000
0444444094050504955200003aaaa3a3333333333333bb33333b3333333099033333333333333333333b7b3332333333333333333bb3ba133b3bb31300000000
022aa22094444444954200004a444a44444444443b33b333333333333309a9903333a333333333a33333b3332e233333333733333b3b33133b3b3b1300000000
042222404444441444420000444444444444444433b3333333333333309aa890333a333333333a9a3333333332333333337a733331bb3b1331b33b1300000000
044444409444447494420000322222233222222333b333333b33333330989a9033a9a333333333a333133333333333e333373333331111333311113300000000
06666660942444449420000033333333333333333333333333333333308989033a989a333333333331c1333333333e8e33333333333223333332233300000000
0000000042242424420000003333333333333333333333333333333333000033a98889a33333333333133333333333e333333333334442333344423300000000
33242233333333339999999911111111444444444ffffff433333333333333333336663333366333333333330000000000000000008888000088880000000000
33424433333333334444444411111111444444444f4f44443333333333333333336055633365063333333333080000800800008008a88a800888888000000000
33422433333333332224422411111111cccccccc4ffffff43393333333333333365a506336005633333333330888888008888880088888800888888000000000
33444233333333334444444411111111111111114f44fff4339a66333333393365059006650555633366633308a88a8008888880000880060008800600000000
33422433333333334224242211111111111111114ffffff436950563663693336550590665500556665006638289982882888828056556560565565600000000
3324443333333333444444441111111111111111444f444460595056006a96360500995605550056055500568029920880222208665555866855558600000000
3342243333333333323b332311111111111111114ffffff405a905055505896050559a5550505500505055000082280000822800665005088650050800000000
34244243333333333433334b11111111111111114444f4f450985505505559a50009895050555005505550050080080000800800008008000080080000000000
00000000dddddddd99999999c1c1c1c167767667000000000000000044444444000000001d1111d1ddddddddddddddddddd66ddddddddddddddddddd00000000
00000000dddddddd44444444c1c1c1c11111111100000000000000002224422222200222111d1111dddddddddddddddddddddddddddddadddddddddd00000000
00000000dddddddd22244224c1c1c1c1111111110000000000000000442222444420024411111111ddddddddddd66dddddd66ddddaaaadaddddddddd00000000
00000000dddddddd44444444c1c1c1c1111111110000000000000000442aa244442002441d111d11d6d6d6d6dd6556dddddddddd4a444a444444444400000000
000999a0dddddddd42242422c1c1c1c1111111110000000000000000442222444422224411111111d6d6d6d6dd6556ddddd66ddd444444444444444400000000
00000000dddddddd44444444c1c1c1c1111111110000000000000000444444444444444411d11111ddddddddddd66dddddddddddd222222dd222222d00000000
00000000dddddddd32333323c1c1c1c11111111100000000000000004444444444444444d111d11dddddddddddddddddddd66ddddddddddddddddddd00000000
00000000dddddddd3433334376677776111111110000000000000000666666666666666611111111dddddddddddddddddddddddddddddddddddddddd00000000
0000000000444400004449000000000066666666ccccccc66ccccccc77777777cccccbbb333333333333333b3333733bccccccc1000000000000000000000000
0000000000544600004544000000000066666666ccccccc66ccccccc77777777ccbbbb3333733333333733bb3333333bccccccc1000000000000000000000000
0069440000694400446944554469445566666666cccccc6666cccccc77777777cbb333333333333333333bbc373333bbcccccc11000000000000000000000000
0069460000694600666946646669466466666666cccccc6666cccccc77777777cb3333733333733333333bbc333333bbcccccc15000000000000000000000000
0044440000444400444444494444444966666666cccccc6666cccccc77777777cb3333333333337333333bbc337333bbcccccc15000000000000000000000000
0044550000445500994455449944554466666666ccccc666666ccccc77777777bb33333333333333373333bc33333bbbccccc115000000000000000000000000
0066440000000000000000000000000066666666cc666666666666cc77777777b333733333333333333373bb33bbbbbbcc111155000000000000000000000000
0044440000000000000000000000000066666666666666666666666677777777b3333333333333333333333bbbbbbbbb11155555000000000000000000000000
00000000000000000000000000444400555555556666666666666666bbbb6666bbbbccccbbccccbbb3373333b337333366666bbb000000000000000000000000
0000000000000000000000000054460055555555cc666666666666cc333bbb66333bbbcc3bbbbbb3bb333333b333333366bbbb33000000000000000000000000
0069445544694400446944550069440055555555ccccc666666ccccc33333bb633333bbc333bbb33cbb33333bb3333336bb33333000000000000000000000000
0069466466694600666946640069460055555555cccccc6666cccccc333333b6333333bc33333333cbb33333bb3337336b333333000000000000000000000000
0044444944444400444444490044440055555555cccccc6666cccccc337333bb337333bb73333373cbb33373bb3333336b373333000000000000000000000000
0044554499445500994455440044550055555555cccccc6666cccccc3333333b3333333b33333333cb333333bbb33333bb333373000000000000000000000000
0000000000000000004494000066440055555555ccccccc66ccccccc3333333b3337333b33337333bb337333bbbbbb33b3333333000000000000000000000000
0000000000000000004644000044440055555555ccccccc66ccccccc3337333b3333333b33333333b3333333bbbbbbbbb3333333000000000000000000000000
00444900004449000000000000000000b3bb3bbbccccccc66ccccccc5555555855555555333333333333733bcccccccc66666661000000000000000000000000
004544000045440000000000000000003f33f333cccccc6666cccccc55555595555a999573333733333333bbcccccccc66666661000000000000000000000000
006944554469440000445444449444004fff6444cccccc6666cccccc5555958555a5955533333333333333bbcccccccc66666611000000000000000000000000
006946646669460000944446466645004ffff444cccccc6666cccccc5559555559555aa933333333337333bbcccccccc66666615000000000000000000000000
004444494444440000964944444444004ffff444cccccc6666cccccc555a55555595595933337333333333bbcccccccc66666615000000000000000000000000
004455449944550000464444444964004ffff444cccccc6666cccccc55a595555a85855a33333333333333bbcccccccc66666115000000000000000000000000
004444000046440000445400004544004ffff444cccccc6666cccccc55a5555555aa58553bbbbb333333333bc111111c66111155000000000000000000000000
00544400004644000044940000459900d6677dddccccccc66ccccccc5555555555558595bbbbbbbb3333373b1155551111155555000000000000000000000000
55555555555555550046540000644400cccccccc66666666cccccccc3b6666663bccccccbbbbbbbbb33333336666666600000000000000000000000000000000
56666665555555550046640000645500ccccccccc666666cccccccccbb666666bbcccccc33bbbbb3bb3333336666666600000000000000000000000000000000
56066065555555d50044449444444400ccccccccccccccccccccccccb6666666bccccccc33333333bb3373336666666600000000000000000000000000000000
5dddddd5555555550059466644469400ccccccccccccccccccccccccb6666666bccccccc33733333bb3333336666666600000000000000000000000000000000
55d00d5555d055550054444494449400ccccccccccccccccccccccccbb666666bbcccccc33333333bb3333336666666600000000000000000000000000000000
50dddd05555555550046449464544400ccccccccccccccccccccccccbb666666bbcccccc33373333bb3333736666666600000000000000000000000000000000
50000005555555550000000000000000ccccccccccccccccc666666c3b6666663bcccccc33333373bb3333336111111600000000000000000000000000000000
55555555555555050000000000000000cccccccccccccccc666666663b6666663bcccccc33333333b33733331155551100000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000027343434343434343434243424342434343434343434243434343434
37000000000000000000000000000000000000000000000000000000000000444444444444444444444444444444444444c64545454545454545454545454545
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000454500000000
__gff__
0000000101000000000000000001010001090002000000000000000000010100110001010100010101010102080000000000010101000005000100000002000001010101010101010000000000000000010101010101010000000000000000000101010101010100000000000000000000000101010101010100000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0d1d1e1d1d1e0d0e1e1d0d1e1e0e1e0d1e0e1d0d1e1d0d1e1e33333333131b1d0e6243434343435243434343434352434343434343434343435243434343436321212121212121212121212121212121212121212121212121212121212121444444474747474747444444444444444444444444444444444444445b4917091a
0d1e0d090d0d1e19091b210c210a09211a211b091e0d0e1d1e343434340d1c1e1d5370717171705370717171717053707170504343637170715371717171705321212121212121212121212121212121212121212121212121212121212121444747474744444747474444444444445c797979795744444444444464645b490b
1d1e0c161b210421211609211a212116211b21160b0c210d1d2323232307211e1e53715043434373715043434343737140717171705371407153715043434342632121212121212121212121212121212121212121212121212121212121214447474444444447444444444444445c1708494949497979574444444444645b49
0d0d1919212121210c21210a21191c211a210b0a09211a210e2323231e210e1d0e53707171717171707171707171717060435251715371537153707171717171532121212121212121212121212121212121212121212121212121212121214444444444444444444444445c797949054949494949490549574444444444647a
1e1d0a1a16210a19210a212109161a21190a21212115211e2423231e0d0b211d1d53716243434343434363716243434373705370715371537160434343435171532121212121212121212121212121212121212121212121212121212121214444444444445c7979797979494949494949494916494949496a4444444444445b
1e1d0d1b211c09211a212221211b0a210921161a211c09242323231d1a1d070e0e5371532121212121215371537071717171726371417153715370717171717053212121212121212121212121212121212121212121212121212121212121444444445c79494949494949494949494949164932494949494b44444747474464
0d1d082424241b0a24242425242424242424210b0a1b242323230d1d1e0d211d1e53715321212121212153705371624363717053707170537172434343435171532121212121212121212121212121212121212121212121212121212121214444445c49494949494949494949054949696925694908494b6447474747444444
1d2424232323242423232325232323232323242424242323232121212121210d1d417041212121212121724373704121726371724343436170717171717171705321212121212121212121212121212121212121212121212121212121212144445c494949494949494908494949694b646425645b4b64644447474747444444
2423230d1e23232323232121322121212323232323232323212107210d1d1e1e080d21212121212121212121212121212153707171717072434343434343434373212121212121212121212121212121212121212121212121212121212121495c4949494949494949696969694b646444472544646444444747474747474456
23231d21212115212103212121210821212121212121212121212121210d0e070e1e212121212121212121212121212162424343436371707171717171707111212121212121212121212121212121212121212121212121212121212121214949494949174949494b6464646464444447472555444444444747474747474466
0d1d0e21212121212121212121212121212121072121212106212121210d1e0d1e2121212121212121212121212121215370717171537162434343435171624363212121212121212121212121212121212121212121212121212121212121494949494949494b64644444444444444456752558554444444747474747444466
1e1e2121212121212121212106212121212121212121212121212121211d320e2121212121212121212121212121212172637140705371537171717171705370532121212121212121212121212121212121212121212121212121212121214949494949496a644444474756757575757448256a654444444447474744444466
0e212121072121211621212121212121212121212121212121212121212121212121212121212121212121212121212121537160437371537071717162437371532121212121212121212121212121212121212121212121212121212121214949494949496a77444447567474485959590c494b654444444444444444445674
1d16212121212121212121212108212121212121212121211621212121210d1e21212121212121212121212121212121215371537171717243434343737071715321212121212121212121212121212121212121212121212121212121212149494949490d495744444466744849051609494b64745544474747444444567448
0e0d2121212121212121212121212121212121210621212121212121210d1e1d1e0d2121212121212121212121212121215371537040717171717171717162436121212121212121212121212121212121212121212121212121212121212149494949491d1e6a44444466481b490a49494b6474747455474747444456744849
0d1e1d21212121212121062121212121162121212121212121212121211d1e0e1d1d2121212121212121212121212121215370724361706243637040706273705321212121212121212121212121212121212121212121212121212121212149494949490d1d6a444456745a494949054b647474747474554747475674745a49
1d1b0d072121212121212121212121212121212121212121212121210e1e070e1a1e1d21212121212121212121212121215371717172437370604361715371715321212121212121212121212121212121212121212121212121212121212117494949220d494b445674745a0c490d1d64747474485958745544446674484949
1e1a080d2121210721212121212121212121212121212121212121070d1d1c1a091e0d212121212121212121212121212160435170717071715370537153706273212121212121212121212121212121212121212121212121212121212121494949490d1d6a644466744849491e0d0d747474745a054a7474554466745a4949
0e1d1d0e2121212121212107212121212121210721212121212121210d1e0b1c190d1e21212121212121212121212121215371717171407171537153715371532121212121212121212121212121212121212121212121212121212121212149491e1e1d1d4b4456740d1b49490d1d0d747474745a49495958747574745a494b
393939393939212121212121212121212139393939393921062121211e1e0d1a0d1d1d2121212121212121212121212121537050434342517153715371417153212121212121212121212121212121212121212121212121212121212121211d1e1d69694b644466745a49051a0d1e64747474745a4918494958747448494b64
393131313c39393939212121212139393939313c31313921212121210d0d1d1e1e0d21212121212121212121212121212153717170717171704171537170715321212121212121212121212121212121212121212121212121212121212121446464646464444466745a491e256464747474485949494949694b74745b4b6474
393a3a3a3b3a3a3a393939113939393a3a3a3a3b3a3a392121212121210d1d1d0d2121212121212121624343434343434342434343434351717170724351705321212121212121212121212121212121212121212121212121212121212121444444444444474746741d4b6425747474744849054949694b6464747464647474
393131313c3131313131313c313131313131313c313139212107212121210d0e1d2121212121212121537071717171717171717170717171704071717170714921212121212121212121212121212121212121212121212121212121212121444444474747474744666464742574747448494949494b64647474747448587474
393131313c3131313131313c313131313131313c313139212121212121210e1e1e0d212121212121215371504343434343434343524343434343434343517153212121212121212121212121212121212121212121212121212121212121214444474747474747476674747425744859494949494b64747476747448694b7474
393131313c3131313131313c313131313131313c313139212121052106210e1e1d1d2121212121212153707171717171717171705371707171717171717071726321212121212121212121212121212121212121212121212121212121212144474747474444445674747448255949494949494b647474454446746464647474
393939393b3a3a3a3a3a3a3b3a3a3a3a3a3a3a3b3a3a393939212121211e1d0e1d1e212121212121624263705043434343436371537162435243517062517170532121212121212121212121212121212121212121212121212121212121214447474747444456747474745a4949494949694b647445444747446674746b6b4c
393131313c3131313131313c313131313131313c3131393739062121211d080d62434343434352436171537171717171717053715371537053717171537071506121212121212121212121212121212121212121212121212121212121212144474747444456747448595949494949694b646474454447474756746b4c545454
39313131393131313131313c313131313131313c313139313921211e1e0d1e1d5371717171705370537153705043524343437371537060436170624342637170532121212121212121212121212121212121212121212121212121212121214447475675757474484949494949694b646474744544474747476b4c5454545468
393d3131393939393931313c313131313131313c3131113139211d1e060c1d0d537140714071537141717243434361707171717072436170417153717053715061212121212121212121212121212121212121212121212121212121212121447575744859595949494949494b6464747445444444447b7b6c54685454675454
39393939392121053939393939393939393939393939393939051d1d1c1b081d5371537053715371717071717170417140714071717053717171537162537170532121212121212121212121212121212121212121212121212121212121214448595949494949494949494b6474747445474747476c54545467545454545454
06172121212121212106212117212121210521211721212121210d1e1d1e0e1e5370533d537172434343434351717171537160434343737150436171724251715321212121212121212121212121212121212121212121212121212121212144444949494949494949496a64747447474447477b6c5454545454685454546754
2726282a272a2a2826292a272a282a262a27292a262a28292a2628272a292a2872434243617171717171717171716243617153707171717171705370717171715321212121212121212121212121212121212121212121212121212121212144494949494949494949494b744547474444446c54546854545467545454545454
__sfx__
00030000207402574026740227402870025700157001f7001c7001570014700127000170000700007003e7001570000700227001a7002e7003170022700337003070000700257000070000700007000070000700
000400001a1501b1501a1501a150191501a1501a1501c1501e1501e1501e100000000f00000000280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200000020014250152501525012250122500020000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200
